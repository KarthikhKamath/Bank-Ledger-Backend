version: "3.8"

services:
  db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: karthik7
      MYSQL_DATABASE: transaction-ledger
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: karthik7
      MONGO_INITDB_ROOT_PASSWORD: karthik7
    ports:
      - "27018:27017"
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2182:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
